apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-management-db
  labels:
    app: user-management-db
spec:
  selector:
    matchLabels:
      app: user-management-db
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: user-management-db
    spec:
      containers:
        - name: user-management-db
          image: 'postgres:15-alpine'
          env:
            - name: TZ
              valueFrom:
                configMapKeyRef:
                  name: chat-socket
                  key: server.timezone
            - name: PGTZ
              valueFrom:
                configMapKeyRef:
                  name: chat-socket
                  key: server.timezone
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: chat-socket
                  key: user_management.db.db_name

            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: chat-socket
                  key: user_management.db.user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: chat-socket
                  key: user_management.db.password

          resources:
            requests:
              memory: "256Mi"
              cpu: "500m"
            limits:
              memory: "256Mi"
              cpu: "500m"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - user-management-db
                topologyKey: kubernetes.io/chat-microservices
