apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-management-service
  labels:
    app: user-management-service
spec:
  selector:
    matchLabels:
      app: user-management-service
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: user-management-service
    spec:
      containers:
        - name: user-management-service
          image: 'user-management-service:latest'
          ports:
            - containerPort: 8090
              name: ingress-port
            - containerPort: 8081
              name: actuator-port
          env:
            - name: POSTGRES_HOST
              value: 'user-management-db'
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: chat-socket
                  key: user_management.db.db_name

            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: chat-socket
                  key: user_management.db.user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: chat-socket
                  key: user_management.db.password

            - name: OAUTH2_ISSUER_URI
              valueFrom:
                configMapKeyRef:
                  name: chat-socket
                  key: identity_server.issuer_uri

            - name: JAVA_OPTS
              value: "-Xmx256m -Xms128m -Xss256k -XX:CompressedClassSpaceSize=32m -XX:-TieredCompilation"
          lifecycle:
            preStop:
              exec:
                command: [ "sh", "-c", "sleep 10" ]
          readinessProbe:
            httpGet:
              port: 8081
              path: /actuator/health/readiness
          livenessProbe:
            httpGet:
              port: 8081
              path: /actuator/health/liveness
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "512Mi"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - user-management-service
                topologyKey: kubernetes.io/chat-microservices
