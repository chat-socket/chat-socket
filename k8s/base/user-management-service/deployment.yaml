apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-management-service
  labels:
    app: user-management-service
spec:
  selector:
    matchLabels:
      app: user-management-service
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: user-management-service
    spec:
      initContainers:
        - name: wait-for-db
          image: busybox:1.28
          command: [ 'sh', '-c', 'echo -e "Waiting for DB Server"; while ! nc -z "$POSTGRES_HOST" "$POSTGRES_PORT"; do sleep 1; printf "-"; done; echo -e "  >> DB Server has started";' ]
          env:
            - name: POSTGRES_HOST
              value: 'user-management-db'
            - name: POSTGRES_PORT
              value: "3306"

        - name: wait-for-oidc
          image: busybox:1.28
          command: [ 'sh', '-c', 'until wget -q --spider "$OAUTH2_ISSUER_URI" > /dev/null; do echo "Waiting for OIDC Server"; sleep 1; done; echo "OIDC Server has started"' ]
          env:
            - name: OAUTH2_ISSUER_URI
              valueFrom:
                configMapKeyRef:
                  name: chat-socket
                  key: identity_server.internal_issuer_uri
      containers:
        - name: user-management-service
          image: 'user-management-service:latest'
          ports:
            - containerPort: 8080
              name: ingress-port
          env:
            - name: POSTGRES_HOST
              value: 'user-management-db'
            - name: POSTGRES_PORT
              value: "3306"
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: chat-socket
                  key: user_management.db.db_name

            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: chat-socket
                  key: user_management.db.user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: chat-socket
                  key: user_management.db.password

            - name: OAUTH2_ISSUER_URI
              valueFrom:
                configMapKeyRef:
                  name: chat-socket
                  key: identity_server.internal_issuer_uri

            - name: OAUTH2_EXTERNAL_ISSUER_URI
              valueFrom:
                configMapKeyRef:
                  name: chat-socket
                  key: identity_server.external_issuer_uri

          lifecycle:
            preStop:
              exec:
                command: [ "sh", "-c", "sleep 10" ]
          readinessProbe:
            httpGet:
              port: 8080
              path: /q/health/ready
          livenessProbe:
            httpGet:
              port: 8080
              path: /q/health/live
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - user-management-service
                topologyKey: kubernetes.io/chat-microservices
